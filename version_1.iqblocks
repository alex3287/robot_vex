{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"_2.^beQjx|FGt38A,8(E\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"iq_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"-10\"><next><block type=\"iq_looks_set_color_sensor_brightness\" id=\"A)F^5H42I[bO:]KyF@+0\"><field name=\"COLORSENSOR\">Color10</field><value name=\"LEVEL\"><shadow type=\"math_whole_number\" id=\"$iz3fEC*q8M6EBWC})n%\"><field name=\"NUM\">50</field></shadow></value><next><block type=\"iq_control_forever\" id=\";IhX2*|w:#;U6vvT!Ay(\"><statement name=\"SUBSTACK\"><block type=\"iq_looks_set_cursor_new\" id=\"T0y:6[U[z^|Ji){Yb}iP\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"?jL6nG4$OkSEo)vcAnU!\"><field name=\"NUM\">1</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"(7l2R/Gm5zRSXdp(oSKl\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"F/Q-/kZtz1Y@fl1EfT}r\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"yL65W.Ct$11|oUiWKxia\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_sensing_color_of\" id=\"%N+m9|TLi_1q9EEs[i:c\"><field name=\"COLORSENSOR\">Color10</field></block></value><next><block type=\"iq_looks_set_cursor_new\" id=\"zCzf[u/Ez1(G^.H@Nxf|\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"kg^#7z?oKQM^$owsY?qz\"><field name=\"NUM\">2</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\"mc2*d7V;s[H`R8LHnf%v\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"GWZPXrLEaK8J}1Qjs2Bi\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"JctfSrLuk$RevM6@#`R7\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_sensing_color_of\" id=\"?RR,[maSi*3G`yQ[aP:{\"><field name=\"COLORSENSOR\">Color3</field></block></value><next><block type=\"iq_looks_set_cursor_new\" id=\"+H85$9tDSZDNNy(hdiO!\"><field name=\"TARGET\">Brain</field><value name=\"ROW\"><shadow type=\"math_whole_number\" id=\"[1xMKEp46C5?J`0sWJ!a\"><field name=\"NUM\">3</field></shadow></value><value name=\"COLUMN\"><shadow type=\"math_whole_number\" id=\":U9/^j?@0_`@SWCjK_Dd\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"iq_looks_print_new\" id=\"wp%=wx2[*BSS_HTLN{(g\"><field name=\"TARGET\">Brain</field><field name=\"andsetcursortonextrow_mutator\">FALSE</field><value name=\"DATA\"><shadow type=\"text\" id=\"w%dxIkCL;[0UTW=^qD+n\"><field name=\"TEXT\">VEXcode</field></shadow><block type=\"iq_sensing_brightness_of\" id=\"x!XWR/p^g;M{@^(!z,8`\"><field name=\"COLORSENSOR\">Color10</field></block></value><next><block type=\"iq_control_if_elseif_else\" id=\"YG1Pz-hM/!lD#u}R`1d3\"><mutation branches=\"2\"></mutation><field name=\"BRANCH_BLANK\">node_modules/@rm-vca/blockly/media/../../../../static/img/ui_imgs/elseif_blank.png</field><field name=\"BRANCH_REMOVE\">node_modules/@rm-vca/blockly/media/../../../../static/img/ui_imgs/elseif_blank.png</field><field name=\"BRANCH_ADD\">node_modules/@rm-vca/blockly/media/../../../../static/img/ui_imgs/elseif_add.png</field><value name=\"CONDITION1\"><block type=\"iq_operator_or\" id=\"@NrsE7QAb2{%4H3yms3c\"><value name=\"OPERAND1\"><block type=\"iq_operator_color_detects_color\" id=\"Ku3kC8u`~[sMj[Bp[W6f\"><field name=\"COLORSENSOR\">Color10</field><field name=\"color\">red</field></block></value><value name=\"OPERAND2\"><block type=\"iq_operator_color_detects_color\" id=\".gweuF`e~:C@N4xfQ#?|\"><field name=\"COLORSENSOR\">Color10</field><field name=\"color\">red_violet</field></block></value></block></value><statement name=\"SUBSTACK1\"><block type=\"iq_looks_set_touchled_color\" id=\"Mx.yv.df{PY9~#,`b3ek\"><field name=\"TOUCHLED\">TouchLED2</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"9)+#rsH$G?w%uf-uyQlD\"><field name=\"COLOR\">red</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"x(2i5uAVH^bX}B:+5H|l\"><field name=\"TOUCHLED\">TouchLED5</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"aV_g0sE:_G+$?J4qu6+[\"><field name=\"COLOR\">red</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"y](gC.}-0h6un~8yE]A*\"><field name=\"MOTOR\">MotorGroup1</field></block></next></block></next></block></statement><value name=\"CONDITION2\"><block type=\"iq_operator_less_than\" id=\"c$}~W#k|3af.x:[A3QYr\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"dT,j?XFeNT81c-/!pa}k\"><field name=\"NUM\"></field></shadow><block type=\"iq_sensing_distance_from\" id=\"(qXKjF)N^C1):rmELA@R\"><field name=\"SONAR\">Distance4</field><field name=\"UNITS\">mm</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"48]r#^W6NQEJbVJHE}77\"><field name=\"NUM\">100</field></shadow></value></block></value><statement name=\"SUBSTACK2\"><block type=\"iq_looks_set_touchled_color\" id=\"[{!v8k[.7!.^1yi/Hxdz\"><field name=\"TOUCHLED\">TouchLED2</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"M#zMn0(S~|n^ONP1EdPM\"><field name=\"COLOR\">red</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"9;_N6LyQKfaQ8Uf(Z9N?\"><field name=\"TOUCHLED\">TouchLED5</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"R2x0j=P/JVqvn0}lfLB2\"><field name=\"COLOR\">red</field></shadow></value><next><block type=\"iq_motion_stop_motor\" id=\"yxT`{QR|w1x]6)QPXyBe\"><field name=\"MOTOR\">MotorGroup1</field></block></next></block></next></block></statement><statement name=\"SUBSTACK_ELSE\"><block type=\"iq_looks_set_touchled_color\" id=\"*aaR8lnEE%,w%y0!;#P^\"><field name=\"TOUCHLED\">TouchLED2</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"av7rYAK?}+gcy]8(.ugs\"><field name=\"COLOR\">green</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"%TnHqKVl9@6sIel$,O)5\"><field name=\"TOUCHLED\">TouchLED5</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\",u#3SJRt.u_6Gk;X~RCR\"><field name=\"COLOR\">green</field></shadow></value><next><block type=\"iq_motion_spin\" id=\"h$UlZX8KZw?_DgO%By[2\"><field name=\"MOTOR\">MotorGroup1</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block><block type=\"iq_control_forever\" id=\"YeHQ.+C}7i$W,q`F0x$b\" x=\"870\" y=\"-10\"><statement name=\"SUBSTACK\"><block type=\"iq_control_if_then_else\" id=\"4V%EAm@/eU1lt)]b^??T\"><value name=\"CONDITION\"><block type=\"iq_operator_greater_than\" id=\"_r%Etw|Mn{4Y6UeWYMtk\"><value name=\"OPERAND1\"><shadow type=\"math_number\" id=\"Cx4WZ*R|0#~ThK0~eK7Q\"><field name=\"NUM\"></field></shadow><block type=\"iq_sensing_distance_from\" id=\"Lk^tx%minL;WTsYr[!sp\"><field name=\"SONAR\">Distance4</field><field name=\"UNITS\">mm</field></block></value><value name=\"OPERAND2\"><shadow type=\"math_number\" id=\"OH0j*Z#wyL1XzQpy{i^f\"><field name=\"NUM\">100</field></shadow></value></block></value><statement name=\"SUBSTACK\"><block type=\"iq_looks_set_touchled_color\" id=\"BFhh]YZ6.jN-ETy]]5{5\"><field name=\"TOUCHLED\">TouchLED2</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"KE{xGkXV=#,do4cK;VVj\"><field name=\"COLOR\">green</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"cucnB(qhxvQ;)a~L~Nj}\"><field name=\"TOUCHLED\">TouchLED5</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\";(k#FbxPgS-,@5Z7B19G\"><field name=\"COLOR\">green</field></shadow></value></block></next></block></statement><statement name=\"SUBSTACK2\"><block type=\"iq_looks_set_touchled_color\" id=\"PznOpB[b=S;Y}ZZ=(#h@\"><field name=\"TOUCHLED\">TouchLED2</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"(:_RDTb-d3Xyv`+bub]H\"><field name=\"COLOR\">none</field></shadow></value><next><block type=\"iq_looks_set_touchled_color\" id=\"opH%6HJzm8+Nl2QBCgkq\"><field name=\"TOUCHLED\">TouchLED5</field><value name=\"COLOR\"><shadow type=\"iq_looks_colorlist\" id=\"zM]t#[0?Pi(m,*8cy09K\"><field name=\"COLOR\">none</field></shadow></value></block></next></block></statement></block></statement></block></xml>","rconfig":[{"port":[1,6],"name":"MotorGroup1","customName":false,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"вперёд","rev":"обратно","motor_a_reversed":"false","motor_b_reversed":"true"}},{"port":[4],"name":"Distance4","customName":false,"deviceType":"Distance","deviceClass":"sonar","setting":{}},{"port":[9],"name":"Distance9","customName":false,"deviceType":"Distance","deviceClass":"sonar","setting":{}},{"port":[2],"name":"TouchLED2","customName":false,"deviceType":"TouchLED","deviceClass":"touchled","setting":{}},{"port":[5],"name":"TouchLED5","customName":false,"deviceType":"TouchLED","deviceClass":"touchled","setting":{}},{"port":[3],"name":"Color3","customName":false,"deviceType":"Color","deviceClass":"colorsensor","setting":{}},{"port":[7],"name":"TouchLED7","customName":false,"deviceType":"TouchLED","deviceClass":"touchled","setting":{}},{"port":[12],"name":"TouchLED12","customName":false,"deviceType":"TouchLED","deviceClass":"touchled","setting":{}},{"port":[10],"name":"Color10","customName":false,"deviceType":"Color","deviceClass":"colorsensor","setting":{}}],"slot":0,"platform":"IQ","sdkVersion":"20210916.19.00.00","appVersion":"2.2.1","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START IQ MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END IQ MACROS\n\n\n// Robot configuration code.\nmotor MotorGroup1MotorA = motor(PORT1, false);\nmotor MotorGroup1MotorB = motor(PORT6, true);\nmotor_group MotorGroup1 = motor_group(MotorGroup1MotorA, MotorGroup1MotorB);\n\nsonar Distance4 = sonar(PORT4);\nsonar Distance9 = sonar(PORT9);\ntouchled TouchLED2 = touchled(PORT2);\ntouchled TouchLED5 = touchled(PORT5);\ncolorsensor Color3 = colorsensor(PORT3);\ntouchled TouchLED7 = touchled(PORT7);\ntouchled TouchLED12 = touchled(PORT12);\ncolorsensor Color10 = colorsensor(PORT10);\n\n\n\n// Generated code.\n\n// Include the IQ Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nint Brain_precision = 0;\n\nfloat myVariable;\n\nconst char* convertColorTypeToString(colorType col) {\n  switch(col){\n  case colorType::none: return \"none\";\n  case colorType::red:             return \"red\";\n  case colorType::green:           return \"green\";\n  case colorType::blue:            return \"blue\";\n  case colorType::white:           return \"white\";\n  case colorType::yellow:          return \"yellow\";\n  case colorType::orange:          return \"orange\";\n  case colorType::purple:          return \"purple\";\n  case colorType::cyan:            return \"cyan\";\n  case colorType::red_violet:      return \"red_violet\";\n  case colorType::violet:          return \"violet\";\n  case colorType::blue_violet:     return \"blue_violet\";\n  case colorType::blue_green:      return \"blue_green\";\n  case colorType::yellow_green:    return \"yellow_green\";\n  case colorType::yellow_orange:   return \"yellow_orange\";\n  case colorType::red_orange:      return \"red_orange\";\n  case colorType::black:           return \"black\";\n  case colorType::transparent:     return \"transparent\";\n  default:              return \"\";\n  }\n}\n\n// Used to find the format string for printing numbers with the\n// desired number of decimal places\nconst char* printToBrain_numberFormat() {\n  // look at the current precision setting to find the format string\n  switch(Brain_precision){\n    case 0:  return \"%.0f\"; // 0 decimal places (1)\n    case 1:  return \"%.1f\"; // 1 decimal place  (0.1)\n    case 2:  return \"%.2f\"; // 2 decimal places (0.01)\n    case 3:  return \"%.3f\"; // 3 decimal places (0.001)\n    default: return \"%f\"; // use the print system default for everthing else\n  }\n}\n\n// \"when started\" hat block\nint whenStarted1() {\n  Color10.setLight(50, percent);\n  while (true) {\n    Brain.Screen.setCursor(1, 1);\n    Brain.Screen.print(\"%s\", convertColorTypeToString(Color10.colorname()));\n    Brain.Screen.setCursor(2, 1);\n    Brain.Screen.print(\"%s\", convertColorTypeToString(Color3.colorname()));\n    Brain.Screen.setCursor(3, 1);\n    Brain.Screen.print(printToBrain_numberFormat(), static_cast<float>(static_cast<float>(Color10.brightness())));\n    if (Color10.detects(red) || Color10.detects(red_violet)) {\n      TouchLED2.setColor(red);\n      TouchLED5.setColor(red);\n      MotorGroup1.stop();\n    } else if (Distance4.distance(mm) < 100.0) {\n      TouchLED2.setColor(red);\n      TouchLED5.setColor(red);\n      MotorGroup1.stop();\n    } else {\n      TouchLED2.setColor(green);\n      TouchLED5.setColor(green);\n      MotorGroup1.spin(forward);\n    }\n  wait(20, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  whenStarted1();\n}","target":"Physical"}